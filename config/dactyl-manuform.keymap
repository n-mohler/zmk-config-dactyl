#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W           &kp F            &kp P  &kp B                                  &kp J             &kp L  &kp U         &kp Z           &kp LS(COMMA)
&kp A  &kp R           &kp S            &kp T  &kp G                                  &kp M             &kp N  &kp E         &kp I           &kp O
&kp Y  &kp X           &kp C            &kp D  &kp V                                  &kp K             &kp H  &kp COMMA     &kp DOT         &kp LS(NUHS)
       &kp LEFT_ARROW  &kp RIGHT_ARROW                                                                         &kp UP_ARROW  &kp DOWN_ARROW
                                        &mo 1                                                           &mo 2
                                               &kp SPACE   &kp TAB  &kp BACKSPACE     &kp ENTER
                                               &kp ESCAPE  &mo 4    &kp LEFT_COMMAND  &kp LEFT_CONTROL
            >;
        };

        shift {
            bindings = <
&kp LS(Q)  &kp LS(W)     &kp LS(F)      &kp LS(P)  &kp LS(B)                                     &kp LS(J)         &kp LS(L)  &kp LS(U)         &kp LS(Z)     &kp LS(MINUS)
&kp LS(A)  &kp LS(R)     &kp LS(S)      &kp LS(T)  &kp LS(G)                                     &kp LS(M)         &kp LS(N)  &kp LS(E)         &kp LS(I)     &kp LS(O)
&kp LS(Y)  &kp LS(X)     &kp LS(C)      &kp LS(D)  &kp LS(V)                                     &kp LS(K)         &kp LS(H)  &kp LS(COMMA)     &kp LS(DOT)   &kp LS(N2)
           &kp LS(LEFT)  &kp LS(RIGHT)                                                                                        &kp LS(UP_ARROW)  &kp LS(DOWN)
                                        &trans                                                                     &mo 3
                                                   &kp LS(SPACE)  &kp LS(TAB)  &kp LS(BSPC)      &kp LS(ENTER)
                                                   &kp LS(LCTRL)  &trans       &kp LS(LEFT_GUI)  &kp LS(LEFT_ALT)
            >;
        };

        symbols {
            bindings = <
&kp LS(NUMBER_1)  &kp RA(Q)      &kp NUHS          &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                  &kp GRAVE       &kp LS(NUMBER_6)  &kp RA(RIGHT_BRACKET)  &trans             &trans
&kp RA(NUBS)      &kp RA(GRAVE)  &kp RA(NUMBER_8)  &kp LS(NUMBER_8)  &kp RA(NUMBER_7)                  &kp LS(PERIOD)  &kp LS(SLASH)     &kp LS(NUMBER_0)       &kp RIGHT_BRACKET  &trans
&kp NUBS          &kp LS(NUBS)   &kp RA(NUMBER_9)  &kp LS(NUMBER_9)  &kp RA(NUMBER_0)                  &kp RA(NUBS)    &kp SLASH         &kp LS(COMMA)          &trans             &kp RA(MINUS)
                  &kp HOME       &kp END                                                                                                 &kp PAGE_UP            &kp PAGE_DOWN
                                                   &mo 3                                                               &trans
                                                                     &trans            &trans  &trans  &trans
                                                                     &trans            &trans  &trans  &trans
            >;
        };

        numbers {
            bindings = <
&trans            &trans        &trans            &trans          &trans                  &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans                  &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans            &trans        &trans            &trans          &trans                  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                  &trans        &trans                                                                                &trans        &trans
                                                  &trans                                                &trans
                                                                  &trans  &trans  &trans  &trans
                                                                  &trans  &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&kp K_MUTE  &kp C_PLAY_PAUSE   &kp C_PREVIOUS   &kp C_NEXT  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2          &trans                &bt BT_CLR
&kp LC(A)   &kp LC(S)          &trans           &kp LC(F)   &kp LEFT_SHIFT                   &kp MINUS     &kp SEMI      &kp SINGLE_QUOTE      &kp LEFT_BRACKET      &trans
&kp LC(Y)   &kp LC(X)          &kp LC(C)        &kp LC(V)   &trans                           &kp RA(E)     &kp LS(SEMI)  &kp LS(SINGLE_QUOTE)  &kp LS(LEFT_BRACKET)  &trans
            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                                                                           &trans                &trans
                                                &trans                                                     &trans
                                                            &trans          &trans  &kp DEL  &trans
                                                            &trans          &trans  &trans   &trans
            >;
        };
    };
};
